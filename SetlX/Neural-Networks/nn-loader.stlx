// Load test and training data
load_data := procedure(train_length, test_length) {
    test_data  := parse_csv("mnist_test.csv" , test_length);
    train_data := parse_csv("mnist_train.csv", train_length);
    train_data := [ [image, encode(label)] : [image, label] in train_data];
    return [train_data, test_data];
};
// Parse csv into lists
parse_csv := procedure(file, len) {
    // create empty lists for images and labels
    images := []; 
    labels := []; 
    print("Reading file:\t$file$");
    csv := readFile(file);
    // Convert every line into lists    
    for (i in [1..len]) {
        Line := split(csv[i], ",");
        labels[i] := int(Line[1]);                               // first column is label
        images[i] := la_vector([double(x)/255: x in Line[2..]]); // other columns are pixels
        if (i % 10000 == 0) {
            print("Image $i$ of $len$ imported");
        }
    }
    print("End reading:\t$file$");    
    return [[images[i], labels[i]] : i in [1..len]];
};
encode := procedure(digit) {  
    result          := la_vector([0] * 10);
    result[digit+1] := 1; // digit zero has index 1
    return result;
};



