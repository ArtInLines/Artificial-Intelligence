load("game.stlx");
// load("game-alpha-beta.stlx");
// load("game-limit.stlx");

players    := [] |-> [ "X", "O" ];
startState := [] |-> [ [ " " : col in [1..3]] : row in [1..3] ];
nextStates := procedure(State, player) {
    Empty  := empty(State);
    Result := {};
    for ([row, col] in Empty) {
        NextState           := State;
        NextState[row][col] := player;
        Result              += { NextState };
    }
    return Result;
};
empty := S |-> {[row,col] : row in [1..3], col in [1..3] | S[row][col] == " "};
utility := procedure(State, player) {
    Lines := all_lines(State);
    for (Line in Lines) {
        if (#Line == 1 && Line != { " " }) {
            if (Line == { player }) { return  1; } else { return -1; }
        }
    }
    if (forall(row in [1..3], col in [1..3] | State[row][col] != " ")) {
        return 0;   
    }
};
all_lines := procedure(State) {
    Lines := { { State[row][ col] : col in [1..3] } : row in [1..3] };
    Lines += { { State[row][ col] : row in [1..3] } : col in [1..3] };
    Lines += { { State[idx][ idx] : idx in [1..3] } };
    Lines += { { State[idx][-idx] : idx in [1..3] } };
    return Lines;
};
finished := procedure(State) {
    return utility(State, "X") != om;
};
////////////////////////////////////////////////////////////////////////////////
stateToString := procedure(State) {
    L     := [1 .. 3];
    ls    := "\n" + "-" * (4 * 3 + 1) + "\n";  // line separator
    board := join(["| " + join([State[r][c]: c in L]," | ") + " |": r in L], ls);
    return ls + board + ls;
};
getMove := procedure(State) {
    [row, col] := split(read("Your turn, enter move as row, col: "), " *, *");
    [row, col] := [int(row), int(col)];
    State[row][col] := "O";
    return State;
};
final_msg := procedure(State) {
    if (finished(State)) {
        if (utility(State, "O") == 1) {
            print("You have won!");
        } else if (utility(State, "O") == -1) {
            print("You have lost!");
        } else {
            print("It's a draw.");
        }
        return true;
    }
    return false;
};

play_game();

